[
  {
    "answer": "каковы недостатки классической методики проектирования реляционных БД\nНетрадиционный способ восприятия и формализации ПрО;\nПрактическая неприменимость для анализа сложных ПрО;\nНеоднозначность решения проблемы проектирования, граничащая с прямым перебором многочисленных вариантов схемы в поисках наиболее подходящего.\n\n",
    "question": "Каковы основные недостатки классической методики проектирования реляционных БД?",
    "question_number": 1
  },
  {
    "answer": "опишите основную схему семантической методики проектирования БД\nкак выглядит основная схема семантической методики проектирования БД[End]\n\n\n\nПроектирование семантической схемы ПрО с использованием определенной модели.\nПеревод схемы в реляционную модель с применением подходящего набора правил трансформации и получение множества предварительных отношений.\nПроверка полученных отношений на удовлетворение требований нормальных форм и дальнейшая нормализация методом декомпозиции.\n\n",
    "question": "Как выглядит основная схема любой семантической методики проектирования БД? Какова главная стратегия процесса семантического моделирования общей",
    "question_number": 2
  },
  {
    "answer": "укажите этапы расширенной методики проектирования БД[End]\n\n\nФункциональное моделирование бизнес-процессов предприятия, для информационного обеспечения которых создается БД; \nСемантическое моделирование данных в рамках определенной модели; \nПолучение логической схемы БД в понятиях логической модели СУБД; \nНастройка БД на языке физической модели СУБД.\n",
    "question": "Укажите этапы расширенной семантической методики проектирования БД? ",
    "question_number": 3
  },
  {
    "answer": "Если не вносить изменения в артефакты всех этапов, то теряется целостность восприятия проектных документов.\nПервые два этапа создают высокоуровневые представления, которые позволяют быстро познакомиться или вспомнить ключевые моменты схемы, если в них не вносить изменения, то представление будет неверным.\nВносить изменения в артефакты всех этапов необходимо при использовании CASE-инструментов, обеспечивающих все этапы разработки.\n",
    "question": "Какие доводы можно привести в пользу необходимости внесения изменений синхронно в артефакты всех этапов проектирования, включая самые ранние? ",
    "question_number": 4
  },
  {
    "answer": "Цель - как достигается:\nИзучение области деятельности моделируемой организации - определение целей организации и стратегии их достижения.\nОпределение информационных потребностей организации - проведение сбора метаданных и формирование метаописаний процессов функционирования организации.\nОбеспечение представления потребностей с помощью формального моделирования - представление информационных потребностей средствами формальной модели.\n",
    "question": "Каковы цели этапа анализа потребностей задач ПрО? Каким образом они достигаются?",
    "question_number": 5
  },
  {
    "answer": "SADT-модель (Structured Analysis and Design Technique) -  выделение организационных бизнес-процессов и выяснение их структуры (их реинжиниринг)\nDFD-модель (Data Flow Diagrams) - моделирование функционирования проектируемых информационных систем (она ориентирована на задание функциональности самих информационных систем)\nДеловая модель – простейшее средство функционального моделирования, достаточное для задачи проектирования схемы БД. Применяется, когда нет необходимости в построении детальной модели решаемых задач. В частности, когда главной целью проектировщика является построение информационной модели\n",
    "question": "Для чего предназначены различные функциональные модели ПрО? ",
    "question_number": 6
  },
  {
    "answer": "Функции - совокупность различных видов деятельности организации\nКлассы данных - это совокупность данных (атрибутов), необходимых для выполнения функции или вырабатывающихся в результате ее выполнения. \n",
    "question": "В каких понятиях описывается функционирование организации в деловой модели? Что стоит за этими понятиями?",
    "question_number": 7
  },
  {
    "answer": "Строится матрица, строки которой соответствуют функциям, а столбцы - классам данных. На пересечении ставится метка, означающая, что этот класс данных участвует в выполнении соответствующей функции.\n",
    "question": "Каковы основные принципы построения деловой модели?",
    "question_number": 8
  },
  {
    "answer": "Функции организации выявляются: \nАнализом формулировок целей и задач организации;\nАнализом рабочих программ организации;\nИдентификаций продукции или услуг, обеспечиваемых организацией, и определением функций производства продукции или оказания услуг.\n",
    "question": "Каковы функции деловой модель? ",
    "question_number": 9
  },
  {
    "answer": "Классы данных являются высокоуровневыми прообразами будущих множеств сущностей (ER) и отношений (реляционная модель). [Деловая модель ограничивается рассмотрением только списка основных бизнес-процессов без их декомпозиции]\nВопросы и задания к параграфу 5.2\n",
    "question": "Как в дальнейшем будет использоваться деловая модель ПрО на последующих этапах семантической методики?",
    "question_number": 10
  },
  {
    "answer": "Сведение глобальной задачи к подзадачам;\nРешение этих подзадач;\nСинтез решения глобальной задачи из решений подзадач. \n",
    "question": "Какова главная стратегия процесса семантического моделирования с использованием деловой модели, как исходного артефакта, и ER модели, как целевого формализма для представления семантической схемы БД?",
    "question_number": 11
  },
  {
    "answer": "Построение подсхем для каждой функции в отдельности: определение множеств сущностей, множеств связей, ограничений целостности.\nИнтеграция подсхем в общую ER схему предметной области.\n",
    "question": "Какие этапы выделяются в этом процессе? Какие задачи решаются в ходе этих этапов? Какие этапы выделяются в процессе семантического моделирования?",
    "question_number": 12
  },
  {
    "answer": "Каким множествам сущностей соответствует каждый класс данных?\nКаково значение (семантика) каждого множества сущностей?\nКаково имя каждого множества сущностей?\nКакие атрибуты каждого множества сущностей представляют интерес?\nКаково значение (семантика) каждого атрибута?\nКаково имя каждого атрибута?\n",
    "question": "На какие вопросы необходимо дать ответ при определении множеств <<сущностей>>? ",
    "question_number": 13
  },
  {
    "answer": "Какие взаимосвязи между множествами сущностей ассоциируются с каждой функцией?\nКаково значение, имя и степень каждого множества связей?\nСуществуют ли у множеств связей собственные атрибуты? (представляющие интерес с точки зрения функции)\nКакова семантика и имя каждого собственного атрибута? (если они существуют)\n",
    "question": "На какие вопросы необходимо дать ответ при определении множеств <<связей>>?",
    "question_number": 14
  },
  {
    "answer": "1. Какова область значений каждого атрибута? Есть ли среди них многозначные?\n2. Какие функциональные зависимости между атрибутами каждого множества сущностей и множества связей известны?\n3. Какие ключи у каждого множества сущностей? (если они существуют)\n4. Как еще можно идентифицировать сущности и связи каждого типа? (кроме ключей)\n5. Какой тип отношений соответствует каждому бинарному множеству связей?\n6. Какие типы отображений соответствуют каждому множеству связей?\n7. Какие ограничения, выражаемые в логике предикатов первого порядка,\nнакладываются на данные?\n",
    "question": "На какие вопросы необходимо дать ответ при определении ограничений <<целостности>>?",
    "question_number": 15
  },
  {
    "answer": "1. Интеграция множеств сущностей, их атрибутов, множеств связей, атрибутов каждого множества связей методом их семантического объединения (возможна генерализация множеств связей).\n2. Интеграция ограничений целостности, которые ассоциируются с каждым множеством сущностей методом их объединения.\n3. Интеграция других ограничений целостности, которые напрямую не отражаются в ER модели, методом их объединения; сформулировать их на естественном языке или языке логики предикатов первого порядка.\n4. Повторная проверка типов отображений, соответствующих каждому множеству связей.\n",
    "question": "По каким правилам осуществляется интеграция подсхем в общую ER схему ПрО?",
    "question_number": 16
  },
  {
    "answer": "Замена нескольких специализированных множеств связей одним обобщенным множеством связей.\nГенерализация в итоговой схеме возможна при интеграции множеств связей.\nВопросы и задания к параграфу 5.3\n",
    "question": "Что представляет собой генерализация множеств связей?",
    "question_number": 17
  },
  {
    "answer": "Задачей логического проектирования является подготовка схемы БД в\nтерминах и на языке логической модели СУБД.\n",
    "question": "Какая задача решается на этапе логического проектирования данных? Что является задачей логического проектирования?",
    "question_number": 18
  },
  {
    "answer": "Выполняются в любом случае:\n1. Трансформация ER схемы в реляционную схему с помощью соответствующих правил.\n\nВыполняются, если можно улучшить качество и/или эффективность полученной реляционной схемы:\n2. Проверка отношений полученной реляционной схемы на выполнение условий требуемых нормальных форм и их дальнейшая нормализация.\n3. В необходимых случаях введение контролируемой избыточности данных (денормализация схемы), которой сопутствуют меры, исключающие возникновение аномалий. \n",
    "question": "Какие действия предусмотрены на этапе логического проектирования данных для реляционной модели? В каких случаях они выполняются? ",
    "question_number": 19
  },
  {
    "answer": "Мощность применяемой семантической модели данных (способность описать самую сложную ПрО)\nСпособность используемого набора правил преобразования семантической схемы в СУБД-ориентированную схему порождать в каждом конкретном случае идеальные логические схемы. (надежный,детальный фактор проработанного набора правил )\n",
    "question": "Какие факторы в основном влияют на успех применения семантической методики? (390 стр)",
    "question_number": 20
  },
  {
    "answer": "1. Множества сущностей становятся самостоятельными отношениями, однозначные атрибуты множеств сущностей - атрибутами отношений, ключи сущностей - возможными ключами отношения.(еще первичным ключом может быть суррогатный атрибут)\n2. Связей 1:M без атрибутов представляются дублированием первичного ключа 1-отношения в M-отношение.\n3. Связи М:N без атрибутов становятся отношениями, куда дублируются первичные ключи отношений, участвующих в связи.\n4. Связи с атрибутами и связи степени больше двух становятся отношениями, куда дублируются первичные ключи отношений, участвующих в связи. Однозначные атрибуты множества связей становятся атрибутами отношения.\n5. Многозначные атрибуты множеств сущностей или связей становятся отношениями, куда дублируется первичный ключ отношения, построенного для этого множества сущностей или связей. Однозначные атрибуты множество связей становятся атрибутами этого отношения. \n",
    "question": "Вспомните простейшие правила перехода от ER схемы к реляционной схеме БД. (392 стр)",
    "question_number": 21
  },
  {
    "answer": "За счет анализа:\nБинарных множеств связей типа 1:1;\nЗначений минимальных кардинальных чисел отображений, определяемых бинарными множествами связей;\nСпециализаций и категоризаций.\n",
    "question": "За счет чего повышается качество схемы при использовании усовершенствованных правил перехода от ER схемы к реляционной схеме БД? (394 стр)",
    "question_number": 22
  },
  {
    "answer": "Если оба функциональных отображения - полные ТО:\n1. Каждое множество связей типа 1:1 и множества сущностей, которые в нём участвуют, заменяются в ER схеме одним агрегированным Множеством сущностей(МСу),[ с которым соединяются все другие Множество связей(МСв), имевшиеся у двух исходных МСу. Атрибуты нового МСу представляют собой объединение атрибутов обоих исходных МСу и МСв. Ключами полученного МСу являются ключи исходных МСу и МСв. Могут возникать проблемы с именованием нового атрибута.]\n\n2. Если множество сущностей  не вступает в связи с полными функциональными отображениями, оно образует одно отношение, построенное на однозначных атрибутах этого МСу (множества сущностей).[ Возможными ключами этого отношения являются ключи МСу (множества сущностей).]\n\nЕсли одно функциональное отображение - частичное\n3. Бинарное множество связей типа 1:1 (с одним полным функциональным отображением) представляется дублированием первичного ключа отношения, построенного для множества регулярных сущностей, в отношение,построенное для множества слабых сущностей. [Этот внешний ключ является возможным ключом второго отношения и имеет описатель NOT NULL. (образованный внешний ключ может быть возможным ключом отношения и обязательным атрибутом )]\n\nЕсли оба функциональных отображения - частичные\n4. Бинарное множество связей типа 1:1 (с двумя частичными функц. отображениями) представляется самостоятельным отношением, куда дублируются первичные ключи отношений, построенных для множеств сущностей. Каждый из этих внешних ключей является возможным ключом нового отношения и имеет описатель NOT NULL. \n\nОДНО, ДВА ИЛИ ТРИ ОТНОШЕНИЯ\n",
    "question": "Какие решения предлагают усовершенствованные правила для множеств связей типа 1:1? Какими рассуждениями следует сопровождать применение этих правил? (394, 396, 398: Рисунки и текст)",
    "question_number": 23
  },
  {
    "answer": "Если функциональное отображение - полное ТО:\n1. Бинарное множество связей типа 1:M (одно функциональное отображение                               полное, у второго минимальное кардинальное число отображения не имеет значения, а максКЧ = inf) представляется дублированием первичного ключа отношения, построенного для первого множества сущностей, в отношение, построенное для второго множества сущностей. Этот внешний ключ имеет описатель NOT NULL.\n\nЕсли функциональное отображение - частичное ТО:\n2. Бинарное множество связей типа 1:M представляется самостоятельным отношением, куда дублируются первичные ключи отношений, построенных для множеств сущностей 1 и 2. Внешний ключ, являющийся дубликатом первичного ключа второго отношения, представляет собой возможный ключ нового отношения. Оба атрибута этого отношения имеют описатель NOT NULL.\n* Пятое правило: если функциональное отображение является к тому же полным, следовательно, надо представлять такое множество связей с помощью внешнего ключа, который будет обязательным атрибутом. \n*Шестое правило: Если функциональное отображение частично, усовершенствованный набор правил предлагает построить для множества связей типа 1:M самостоятельное отношение.\n",
    "question": "Какие решения предлагают усовершенствованные правила для множеств связей типа 1:M? Какими рассуждениями следует сопровождать применение этих правил? (стр 399)",
    "question_number": 24
  },
  {
    "answer": "Если множество связей имеет свои собственные однозначные атрибуты, они добавляются в то отношение, куда осуществляется дублирование первичных ключей для представления этого множества связей.\n",
    "question": "Как изменились решения в случае однозначных атрибутов множеств связей?Как изменилось решение в случае однозначных атрибутов множеств связей Однозначные атрибуты множеств связей",
    "question_number": 25
  },
  {
    "answer": "СПЕЦИАЛИЗАЦИИ \nТрансформация схемы БД из EER-модели в реляционную модель \nМетоды представления специализаций в реляционной схеме (методы ниже)\n\nМетод 1: 1 отношение. Создается одно отношение, которое включает\nоднозначные атрибуты суперкласса и всех подклассов, т.е. каждый объект в рамках\nспециализации описывается кортежем только одного отношения.\nМетод 2: n+1 отношение. Для суперкласса и каждого из подклассов создается по\nодному отдельному отношению. Один объект может описываться кортежами нескольких отношений: от 1 до n+1.\nМетод 3: n отношений. Создается n отношений – по одному для каждого\nподкласса, однозначные атрибуты суперкласса включаются в каждое из этих отношений. Один объект может быть представлен кортежами нескольких отношений: от 1 до n.\nМетод 4 (гибрид 2 и 3 методов): n+1 отношение. Для суперкласса и каждого из\nподклассов создается по одному отдельному отношению. Кроме этого, однозначные\nатрибуты суперкласса добавляются в каждое отношение, построенное для подклассов.\nОдин объект может быть представлен кортежами нескольких отношений: от 1 до n.\nМетод 5: n+2 отношения. Помимо n отношений для подклассов и одного для\nсуперкласса создается связующее отношение, которое имеет следующие атрибуты: имя родительского отношения; первичный ключ объекта в родительском отношении; имя дочернего отношения; первичный ключ объекта в дочернем отношении. Таким образом, один объект может описываться кортежами нескольких отношений: от 1 до n+2. Причем в связующем отношении к этому объекту может относиться несколько кортежей.\nМетод 6: 2^n отношений. Для любого возможного поддерева в иерархии\nспециализаций, включающего корневой суперкласс, создается одно отношение, которое cодержит в качестве атрибутов все однозначные атрибуты множеств сущностей, принадлежащих поддереву. В конечном счете, каждый объект ПрО относится к одному из этих 2^n классов, и, значит, его кортеж надо создавать в соответствующем отношении. Таким образом, каждый объект в рамках рассматриваемого метода описывается кортежем\nодного и только одного отношения.\n\nМетоды представления категоризаций в реляционной схеме (также для трансформация схемы БД из EER-модели в реляционную модель)\n\nМетод 1: n отношений. Данный метод предполагает, что все однозначные\nатрибуты категории становятся атрибутами в отношениях, представляющих суперклассы. Отношение для категории не создается.\nМетод 2: n+1 отношение. Для подкласса (категории) и каждого из суперклассов\nсоздается отдельное отношение. Варианты способов организации связей между\nкортежами отношений суперклассов и кортежами отношения категории аналогичны\nпредлагавшимся для соответствующего метода специализаций.\nМетод 3: n+2 отношения. Аналогичен методу 5 для специализаций.\n",
    "question": "Какими методами могут быть представлены в реляционной модели специализации и категоризации? (стр. 42-46)",
    "question_number": 26
  },
  {
    "answer": "1. Простота реализации: \nВключает время, затрачиваемое на реализацию метода, а также учет потенциальной необходимости вносить изменения в реляционную схему \n2. Эффективность хранения: \nдублирование значений атрибутов, представление отсутствующих значений (NULL). Этот критерий является основным, если вам важен каждый байт памяти.\n3. Эффективность обработки:\nа) обновления; \nб) проверки ограничений целостности; \nв) выборки.\n",
    "question": "Какие критерии могут направлять процесс выбора метода представления специализаций и категоризаций? (410 страница)",
    "question_number": 27
  },
  {
    "answer": "Специализации: \n1. Количество атрибутов и множеств связей, ассоциированных с суперклассом и подклассами.\n2. Свойства специализации (полное или частичное участие членов суперкласса в подклассах, пересечение или непересечение подклассов).\n3. Степень пересечения подклассов в случае пересекающейся специализации.\n4. Степень неполноты в случае специализации с частичным участием.\n5. Количество подклассов специализации, их динамизм.\n6. Наличие множеств связей или многозначных атрибутов, при представлении которых создаются внешние ключи, ссылающиеся на ключ суперкласса, но не входящие в состав первичного ключа этого отношения.\n7. Выполнение условия, аналогичного условию пункта 6, для одного или нескольких подклассов.\n8. Наличие множеств связей или многозначных атрибутов, внешние ключи которых ссылаются на ключ суперкласса, а также входят в состав первичного ключа данного отношения.\n9. Выполнение условия, аналогичного указанному в пункте 8, для одного или нескольких подклассов.\n10. Использование несуррогатных (естественных) ключей для суперкласса или подклассов.\n",
    "question": "Какие факторы необходимо учесть при выборе метода специализации",
    "question_number": 28
  },
  {
    "answer": "Категоризации:\n1. Количество атрибутов и множеств связей, ассоциированных с категорией и суперклассами.\n2. Свойство полноты/неполноты участия для категоризации.\n3. Степень неполноты в случае категоризации с неполным участием.\n4. Количество суперклассов, их динамизм.\n5. Наличие множеств связей или многозначных атрибутов, внешние ключи которых ссылаются на ключ категории, и входят или не входят в состав первичного ключа данного отношения.\n6. Использование естественных ключей для суперклассов и подкласса.\n\n",
    "question": "Какие факторы необходимо учесть при выборе метода категоризации (415 стр)",
    "question_number": 29
  },
  {
    "answer": "Введение контролируемой избыточности данных;\nЦель этапа - определение необходимости ввода контролируемой избыточности за счет ослабления условия нормализации для повышения производительности системы\nВ чем заключается принцип контролируемой избыточности\nВвод, модификация и удаление, осуществляемые пользователем, должны выполняться на нормализованных структурах, структуры-дубликаты модифицируются исключительно специальными программами, исключающими некорректность данных.\n\n\nденормализация - модификация реляционной \nсхемы, при которой степень нормализации модифицированного отношения (отношений) становится ниже, чем степень нормализации, по меньшей мере, одного из исходных отношений.\nНапример дублирование отдельных атрибутов или объединение нескольких отношений в одну таблицу с целью сокращения числа запросов на соединение отношений.\n\n",
    "question": "Какой принцип используется для денормализации отношений на завершающем этапе логического проектирования?",
    "question_number": 30
  },
  {
    "answer": "1. Объединение таблиц со связями типа «один к одному»\n2. Дублирование неключевых атрибутов родительской таблицы в связях «один ко многим»\n3. Создание агрегирующих столбцов родительской таблицы в связях «один ко многим» \n4. Дублирование атрибутов внешних ключей в иерархии связей «один ко многим» \n5. Дублирование атрибутов в связях «многие ко многим»\n6. Введение повторяющихся групп полей\n7. Объединение справочных таблиц с базовыми таблицами\n8. Создание таблиц из данных, содержащихся в других таблицах\nВопросы и задания к параграфу 5.4\n",
    "question": "Опишите типичные случаи денормализации. (449-451 стр) В каких случая мы используем денормализации",
    "question_number": 31
  },
  {
    "answer": "Анализ транзакций, выбор файловой структуры, определение индексов, определение требований к дисковой памяти.\n",
    "question": "Какие действия осуществляются на этапе физического проектирования данных? (452 стр) Действия на этапе физического проектирования данных",
    "question_number": 32
  },
  {
    "answer": "Таблица, Кластер, Индекс, Индекс-таблица, Секция таблицы, Индексная секция, Сегмент отката (отмены), Временный сегмент, Сегмент LOB, Индекс LOB\n\n",
    "question": "Какие виды сегментов предоставляет СУБД Oracle для хранения таблиц? (стр 461-462)",
    "question_number": 33
  },
  {
    "answer": "1. Не создавать индекс на небольших отношениях.\n2. Следует создавать индекс на первичном ключе отношения\n3. Ввести дополнительный индекс на внешнем ключе.\n4. Ввести дополнительные индексы на всех атрибутах, которые часто применяются в качестве дополнительного поискового ключа.\n5. Ввести дополнительные индексы на атрибутах, которые часто применяются в конструкциях WHERE, ORDER BY, GROUP BY;\n6. Не индексировать атрибут или отношение, которые часто обновляются.\n7. Не индексировать атрибут, если в запросах с его использованием обычно происходит выборка значительной части (например, 25%) кортежей в отношении.\t\n8. Не индексировать атрибуты, которые состоят из длинных символьных строк.\n\n",
    "question": "Каких правил следует придерживаться при построении индексов? (конец 463-464)Правила при построении индексов Правила при построении индексов",
    "question_number": 34
  },
  {
    "answer": "[TABLESPACE <имя табличного пространства>] – табличное пространство, в котором будет создана таблица;\n[PCTFREE <целое>] – объем пространства для потенциального роста длины строк;\n[PCTUSED <целое>] – нижний предел используемости пространства блока (ниже которого необходимо опуститься, чтобы блок вновь стал доступным для вставки)\n[INITRANS <целое>] – начальное количество транзакций, которые могут одновременно обращаться к строкам блока данных (по умолчанию – 1);\n[MAXTRANS <целое>] – максимальное количество транзакций, которые могут одновременно обращаться к строкам блока данных (по умолчанию – 255);\n[<фраза STORAGE>] – фраза, определяющая правила выделения экстентов таблице;\n[LOGGING | NOLOGGING] – будет или нет сохраняться в журнальном файле информация о создании и последующих операциях изменения таблицы.\n\n\n",
    "question": "Какими параметрами команды CREATE TABLE определяются требования к дисковой памяти? (конец 465-466)",
    "question_number": 35
  },
  {
    "answer": "Информационная полнота:\n (схема БД удовлетворяет этому критерию, если она полностью обеспечивает информационные потребности всех будущих пользователей информационной системы.)\nИнформационная корректность\n(схема БД удовлетворяет этому критерию, если в ней нашли отражение все выявленные на этапе анализа ПрО типичные свойства информационных объектов.)\nИнформационная неизбыточность\n(схема БД удовлетворяет этому критерию, если в ней отсутствуют избыточные структуры данных и ограничения целостности.)\n\n\nГЛОССАРИЙ\n\n",
    "question": "Основные критерии качества проекта схемы БД",
    "question_number": 36
  },
  {
    "answer": " Создается одно отношение, которое включает однозначные атрибуты суперкласса и всех подклассов, т.е. каждый объект в рамках специализации описывается кортежем только одного отношения.\n\n",
    "question": "специализаций Метод 1: 1 отношение.",
    "question_number": 37
  },
  {
    "answer": "Для суперкласса и каждого из подклассов создается по одному отдельному отношению. Один объект может описываться кортежами нескольких отношений: от 1 до n+1.\n\n",
    "question": "специализаций Метод 2: n+1 отношение. ",
    "question_number": 38
  },
  {
    "answer": "Создается n отношений – по одному для каждого подкласса, однозначные атрибуты суперкласса включаются в каждое из этих отношений. Один объект может быть представлен кортежами нескольких отношений: от 1 до n.\n\n",
    "question": "специализаций Метод 3: n отношений.",
    "question_number": 39
  },
  {
    "answer": "Для суперкласса и каждого из подклассов создается по одному отдельному отношению. Кроме этого, однозначные атрибуты суперкласса добавляются в каждое отношение, построенное для подклассов. Один объект может быть представлен кортежами нескольких отношений: от 1 до n.\n\n",
    "question": "специализаций Метод 4 (гибрид 2 и 3 методов): n+1 отношение.",
    "question_number": 40
  },
  {
    "answer": "Помимо n отношений для подклассов и одного для суперкласса создается связующее отношение, которое имеет следующие атрибуты: имя родительского отношения; первичный ключ объекта в родительском отношении; имя дочернего отношения; первичный ключ объекта в дочернем отношении. Таким образом, один объект может описываться кортежами нескольких отношений: от 1 до n+2. Причем в связующем отношении к этому объекту может относиться несколько кортежей.\n\n",
    "question": "специализаций Метод 5: n+2 отношения.",
    "question_number": 41
  },
  {
    "answer": "Для любого возможного поддерева в иерархии специализаций, включающего корневой суперкласс, создается одно отношение, которое cодержит в качестве атрибутов все однозначные атрибуты множеств сущностей, принадлежащих поддереву. В конечном счете, каждый объект ПрО относится к одному из этих 2^n классов, и, значит, его кортеж надо создавать в соответствующем отношении. Таким образом, каждый объект в рамках рассматриваемого метода описывается кортежем\nодного и только одного отношения.\n\n",
    "question": "специализаций Метод 6: 2^n отношений. ",
    "question_number": 42
  },
  {
    "answer": "Данный метод предполагает, что все однозначные атрибуты категории становятся атрибутами в отношениях, представляющих суперклассы. Отношение для категории не создается.\n\n",
    "question": "категоризаций Метод 1: n отношений.  ",
    "question_number": 43
  },
  {
    "answer": "Для подкласса (категории) и каждого из суперклассов создается отдельное отношение. Варианты способов организации связей между кортежами отношений суперклассов и кортежами отношения категории аналогичны предлагавшимся для соответствующего метода специализаций.\n",
    "question": "категоризаций Метод 2: n+1 отношение. ",
    "question_number": 44
  },
  {
    "answer": "Аналогичен методу 5 для специализаций.\n",
    "question": "категоризаций Метод 3: n+2 отношения. ",
    "question_number": 45
  },
  {
    "answer": "1. Бинарное множество связей типа 1:M (одно функциональное отображение                               полное, у второго минимальное кардинальное число отображения не имеет значения, а максКЧ = inf) представляется дублированием первичного ключа отношения, построенного для первого множества сущностей, в отношение, построенное для второго множества сущностей. Этот внешний ключ имеет описатель NOT NULL.\n",
    "question": "Усовершенствованные правила типа 1:M, Если функциональное отображение - полное ТО:",
    "question_number": 46
  },
  {
    "answer": "2. Бинарное множество связей типа 1:M представляется самостоятельным отношением, куда дублируются первичные ключи отношений, построенных для множеств сущностей 1 и 2. Внешний ключ, являющийся дубликатом первичного ключа второго отношения, представляет собой возможный ключ нового отношения. Оба атрибута этого отношения имеют описатель NOT NULL.\n\n",
    "question": "Усовершенствованные правила типа 1:M, Если функциональное отображение - частичное ТО:",
    "question_number": 47
  },
  {
    "answer": "Каждое множество связей типа 1:1 и множества сущностей, которые в нём участвуют, заменяются в ER схеме одним агрегированным Множеством сущностей.\n",
    "question": "Усовершенствованные правила типа 1:1, Если оба функциональных отображения - полные ТО:",
    "question_number": 48
  },
  {
    "answer": "Бинарное множество связей типа 1:1 (с одним полным функциональным отображением) представляется дублированием первичного ключа отношения, построенного для множества регулярных сущностей, в отношение,построенное для множества слабых сущностей. \n",
    "question": "Усовершенствованные правила типа 1:1, Если одно функциональное отображение - частичное",
    "question_number": 49
  },
  {
    "answer": "Бинарное множество связей типа 1:1 (с двумя частичными функц. отображениями) представляется самостоятельным отношением, куда дублируются первичные ключи отношений, построенных для множеств сущностей. Каждый из этих внешних ключей является возможным ключом нового отношения и имеет описатель NOT NULL. \n",
    "question": "Усовершенствованные правила типа 1:1, Если оба функциональных отображения - частичные",
    "question_number": 50
  },
  {
    "answer": "становятся самостоятельными отношениями, однозначные атрибуты множеств сущностей - атрибутами отношений, ключи сущностей - возможными ключами отношения.(еще первичным ключом может быть суррогатный атрибут)\n",
    "question": "Простейшее правило перехода для Множества сущностей ",
    "question_number": 51
  },
  {
    "answer": "без атрибутов представляются дублированием первичного ключа 1-отношения в M-отношение.\n",
    "question": "Простейшее правило перехода для <<Связей 1:M>>",
    "question_number": 52
  },
  {
    "answer": "без атрибутов становятся отношениями, куда дублируются первичные ключи отношений, участвующих в связи.\n",
    "question": "Простейшее правило перехода для <<Связей N:M>>",
    "question_number": 53
  },
  {
    "answer": "становятся отношениями, куда дублируются первичные ключи отношений, участвующих в связи. Однозначные атрибуты множества связей становятся атрибутами отношения.\n",
    "question": "Простейшее правило перехода для Связи с атрибутами и связи степени больше двух ",
    "question_number": 54
  },
  {
    "answer": "становятся отношениями, куда дублируется первичный ключ отношения, построенного для этого множества сущностей или связей. Однозначные атрибуты множество связей становятся атрибутами этого отношения. \n",
    "question": "Простейшее правило перехода для Многозначные атрибуты множеств сущностей или связей ",
    "question_number": 55
  },
  {
    "answer": "максКЧ равно 1\n",
    "question": "Функциональное отображение",
    "question_number": 56
  },
  {
    "answer": "это искусственно созданный объект, который наделяется каким-то смыслом тем, кто его создал.\n",
    "question": "Артефакт",
    "question_number": 57
  },
  {
    "answer": "Индекс базы данных-это структура данных, которая повышает скорость операций поиска данных в таблице базы данных за счет дополнительных операций записи и места для хранения для поддержания структуры данных индекса. Индексы используются для быстрого поиска данных без необходимости поиска каждой строки в таблице базы данных при каждом обращении к таблице базы данных.",
    "question": "Индекс",
    "question_number": 58
  },
  {
    "answer": "тип данных, который предназначен для хранения большого количества данных\n",
    "question": "Large object. Большой Объект",
    "question_number": 59
  },
  {
    "answer": "выделение организационных бизнес-процессов и выяснение их структуры (их реинжиниринг)",
    "question": "SADT-модель (Structured Analysis and Design Technique)",
    "question_number": 60
  },
  {
    "answer": "моделирование функционирования проектируемых информационных систем (она ориентирована на задание функциональности самих информационных систем)",
    "question": "DFD-модель (Data Flow Diagrams)",
    "question_number": 61
  },
  {
    "answer": "простейшее средство функционального моделирования, достаточное для задачи проектирования схемы БД. Применяется, когда нет необходимости в построении детальной модели решаемых задач. В частности, когда главной целью проектировщика является построение информационной модели\n",
    "question": "Деловая модель ",
    "question_number": 62
  },
  {
    "answer": "совокупность различных видов деятельности организации",
    "question": "Функции",
    "question_number": 63
  },
  {
    "answer": "Замена нескольких специализированных множеств связей одним обобщенным множеством связей.\n",
    "question": "Генерализация множеств связей",
    "question_number": 64
  },
  {
    "answer": "представляет собой нисходящий подход к определению множества суперклассов и связанных с ними подклассов (есть некоторый).\n",
    "question": "Специализация",
    "question_number": 65
  },
  {
    "answer": "представляет собой восходящий подход (противоположный специализации), который позволяет создать обобщенный суперкласс на основе различных исходных подклассов.",
    "question": "Генерализация",
    "question_number": 66
  },
  {
    "answer": "модификация реляционной схемы, при которой степень нормализации модифицированного отношения (отношений) становится ниже, чем степень нормализации, по меньшей мере, одного из исходных отношений.\n",
    "question": "Денормализация",
    "question_number": 67
  },
  {
    "answer": "связь «суперкласс/подкласс», включающую сразу несколько разных суперклассов, и каждая сущность подкласса должна соответствовать лишь одной сущности одного из суперклассов. В этом случае создаваемый подкласс будет называться категорией(есть некоторый или А, или Б, или …)",
    "question": "Категоризация",
    "question_number": 68
  },
  {
    "answer": "это совокупность данных (атрибутов), необходимых для выполнения функции или вырабатывающихся в результате ее выполнения. \n",
    "question": "Классы данных",
    "question_number": 69
  }
]
