[
  {
    "answer": "Технология БД отличается от технологий в целом тем, что является информационной технологией. А среди информационных технологий выделяется тем, что регламентирует процесс создания и эксплуатации информационных систем, в которых для долговременного хранения информации используется БД, а для управления ею - СУБД. Информационную технологию баз данных отличает использование СУБД той или иной модели данных (МД) – концепции представления в ней объектов мира и их взаимосвязей.\n\n",
    "question": "Укажите отличительные особенности технологии БД выделяющие ее среди технологий вообще и информационных технологий в частности.",
    "question_number": 1
  },
  {
    "answer": "1) Необходимость в долговременном хранении информации;\n2) Необходимость обеспечения взаимодействия нескольких пользователей\n3) Нужно хорошо структурированное и непротиворечивое хранилище\n4) Необходимость вносить изменения\n5) Необходимость в простом и удобном извлечении информации\n6) Производная информация должна получаться из первичной без разработки спец. алгоритмов \n7) Хранение информации в алфавитно-цифровой форме\n\n",
    "question": "Каковы предпосылки использования технологии БД?",
    "question_number": 2
  },
  {
    "answer": "«Модель» в технологии БД – теория моделирования, а сама БД – результат моделирования. В других отраслях знаний моделью называют результат.\n\n\n",
    "question": "В чем особенности термина модель в технологии БД? ",
    "question_number": 3
  },
  {
    "answer": "Основное назначение МД – обеспечить процесс превращения данных в информацию через их интерпретацию.\n",
    "question": "Каково основное назначение моделей данных?",
    "question_number": 4
  },
  {
    "answer": "Правила порождения структур данных, правила порождения ограничений целостности, набор операций над данными.\n\n",
    "question": "Перечислите составные части любой модели данных.",
    "question_number": 5
  },
  {
    "answer": "Определение схемы БД (основные понятия предметной области и их взаимосвязи), наполнение БД изначально не противоречивыми данными, поддержка в будущем и обеспечение получения необходимой информации.\nВариант 2:\nА) Структуры данных определяют, как данные будут храниться и организованы в базе данных.\nБ) термин ограничения целостности связан с поддержанием БД в целостном, не противоречивом состоянии, максимально соответствующем состоянию моделируемой предметной области. \nВ) операции необходимы, чтобы первоначально наполнить схему непротиворечивыми данными и поддерживать их в дальнейшем в адекватном предметной области состоянии, а также обеспечивать получение необходимой информации.\n// На основании правил определяется схема БД (основные понятия предметной области и их взаимосвязи), а операции необходимы, чтобы первоначально наполнить схему не противоречивыми данными и в дальнейшем поддерживать их в адекватном состоянии,  а также обеспечивать получение необходимой информации.\n\t\n",
    "question": "Каково назначение структур данных ограничений целостности и операций над данными?",
    "question_number": 6
  },
  {
    "answer": "(процесс - кто реализует - какие задачи реализует)\n\tПроектирование схемы БД -  Проектировщик БД - исследует ПрО и реализует ее семантическую схему\n\tАдминистрирование БД - Администратор БД - устанавливает БД на оборудование и администрирует ее. (физическая схема БД) ⇒ СУБД\n\tИспользование БД - Пользователь БД - “пишет” или “читает” необходимую информацию. (это основной процесс, ибо ради этого БД создается и поддерживается)\n\n",
    "question": "Укажите основные процессы в системах БД кто и какие задачи в них решает.",
    "question_number": 7
  },
  {
    "answer": "Computer aided software engineering\nCASE-система предназначена для автоматической трансляции схемы ПрО на язык СУБД-ориентированной модели данных или на язык логической модели конкретной СУБД.\n\n",
    "question": "Для чего предназначены CASE-системы?",
    "question_number": 8
  },
  {
    "answer": "\tОднопользовательская - вся система БД управляется одним компьютером, на котором расположены и БД и СУБД и диалоговая система пользователя\n\tКлиент-сервер (двухуровневая) - обработка БД на сервере, диалог с пользователем происходит через компьютер (клиент) \n\tТрехуровневая - между браузером и web-сервером передаются web-страницы, клиентский код и данные, между web-сервером и сервером БД - SQL-операторы и реляционные данные.\n\n",
    "question": "Перечислите и кратко охарактеризуйте архитектуры систем БД.",
    "question_number": 9
  },
  {
    "answer": "Online transaction processing/online analytical processing\nOLTP-системы хранят только текущее состояние системы, а хранилища данных могут хранить некоторое количество состояний данных за счет использования многомерных структур. Работать с такими хранилищами позволяют OLAP-инструменты. \n\n\n",
    "question": "В чем основные различия OLTP-систем БД и хранилищ данных? Что такое OLAP-инструменты?",
    "question_number": 10
  },
  {
    "answer": "1) Представление в голове человека, формируется на основании личного знакомства с ПрО\n2) Семантическая схема, формальное представление ПрО\n3) СУБД-ориентированная, схема ПрО на диалекте СУБД-ориентированной МД\n4) Логическая, обращена к человеку и предоставляет языковые и диалоговые методы общения \n5) Физическая, обращена к средствам хранения данных в оперативной и внешней памяти\n\n\n\n\nВопросы и задания к параграфу 2.1\n",
    "question": "Какие формы представлений о ПрО выделяют в технологии БД? Охарактеризуйте каждую из них.",
    "question_number": 11
  },
  {
    "answer": "Сами данные ничего не говорят человеку, а информация это приращение знаний человека, полученных на основе данных\n\n\t\t\t\t\n",
    "question": "Объясните почему человека интересуют не данные а информация.",
    "question_number": 12
  },
  {
    "answer": "Интерпретация и знания человека. Интерпретация данных дает человеку представление о чем именно свидетельствуют эти данные. На основе знаний человека может быть получена дополнительная информация во время этапа прагматического анализа.\n\nВариант 2: Помимо данных для получения информации человеку необходима Семиотика, которая изучает процесс получения информации из данных в знаковых системах, и три ее раздела, это синтактика (правила), семантика (смысл) и прагматика (восприятие).\n\n\nОбъединение?: Интерпретация и знания человека. Интерпретация данных дает человеку представление о чем именно свидетельствуют эти данные.  Помимо данных для получения информации человеку необходима семиотика, которая изучает процесс получения информации из данных в знаковых системах, и три ее раздела, это синтактика (правила), семантика (смысл) и прагматика (восприятие). На основе знаний человека может быть получена дополнительная информация во время этапа прагматического анализа.\n\n\n",
    "question": "Что кроме данных необходимо для получения информации?",
    "question_number": 13
  },
  {
    "answer": "Они относятся к классу информационных систем, когда внесенные данные совместно с их интерпретациями хранятся в структурированном виде на диске. \n\n",
    "question": "К какому классу информационных систем относятся системы БД с точки зрения принципов получения информации?",
    "question_number": 14
  },
  {
    "answer": "1) Синтаксический анализ – получение из данных информации, путем анализа знаков с точки зрения синтаксиса;\n2) Семантический анализ – получение из данных информации с помощью интерпретации данных;\n3) Прагматический анализ - получение из данных дополнительной информации на основе тех знаний «читателя», которые у него были ранее.\n\n",
    "question": "Перечислите и охарактеризуйте три этапа процесса образования информации из данных.",
    "question_number": 15
  },
  {
    "answer": "Синтактика - синтаксический анализ. Раздел семиотики, изучающий внутренние свойства систем знаков безотносительно к интерпретации.\nСемантика - семантический анализ. Раздел семиотики, рассматривающий отношения знаков к обозначаемому (содержание знаков) или, что то же, соотношения между знаками и их интерпретациями, независимо от того, кто служит “адресатом”.\nПрагматика - прагматический анализ. Раздел семиотики, изучающий восприятие выражений знаковой системы в соответствии с разрешающими способностями воспринимающего.\n\n",
    "question": "Какие разделы семиотики изучают эти этапы?",
    "question_number": 16
  },
  {
    "answer": "Первым этапом процесса передачи информации о ПрО является первичная формализация в голове писателя, то есть определение знаков для идентификации объектов и связей, вторым является обращение писателя к знаковой системе, то есть к системе БД, и добавлением новых объектов и связей, и третьим – воссоздание читателем представления писателя.  \n\n",
    "question": "Опишите как протекает процесс передачи информации о ПрО с использованием систем БД.",
    "question_number": 17
  },
  {
    "answer": "Основное назначение МД – обеспечить процесс превращения данных в информацию через их интерпретацию.\n\n(Модель данных (МД) – это средство, позволяющее реализовать интерпретацию данных и таким образом способствующее получению информации.)\n\n",
    "question": "В чем заключается основное назначение модели данных?",
    "question_number": 18
  },
  {
    "answer": "Атомарная Единица Информации состоит из: \n<Идентификатор объекта, Наименование признака, Значение признака, [Время]>. Компонент [Время] является необязательным и может не включаться.\n\n",
    "question": "Из каких компонентов состоит атомарная единица информации (АЕИ)?",
    "question_number": 19
  },
  {
    "answer": "Без любого из первых трех компонентов, нельзя сформировать информацию. Например: <Артем, Вес в кг, 65>;\nДостаточно отбросить один компонент и мы не получаем никакой информации.\n\n",
    "question": "Объясните почему первые три компонента АЕИ являются обязательными.",
    "question_number": 20
  },
  {
    "answer": "Допустим, у нас в наличии нескольких таблиц, которые описывают объекты одной и той же  категории, категориальная модель предполагает объединение этих таблиц в одну единую. Так, построенные таблицы по объектам одной категории, мы можем собрать в одну таблицу. \nНапример: Рост и Вес\nПолученная таблица содержит все признаки всех объектов одной категории – ЧЕЛОВЕК.\n\n\n",
    "question": "Синтезируйте категориальную модель.",
    "question_number": 21
  },
  {
    "answer": "Модели данных структурно определяются двумя множествами G и O. G – множество правил порождения схем, O – множество операций над данными. G имеет два подмножества Gs, которое определяет правила порождения структур данных, и Gc, которое определяет правила порождения ограничений целостности.\n\n\n",
    "question": "Дайте структурное определение модели данных.",
    "question_number": 22
  },
  {
    "answer": "Множество правил порождения структур данных(Gs): БД – совокупность таблиц, предназначенных для хранения информации об объектах одной категории. Для каждой категории определен набор признаков. Каждый объект категории - строка таблицы, в столбце признака его значение для данного объекта.  \nМножество правил порождения ОЦ(Gc): Допустимые значения признаков могут быть ограничены указанием их типа, перечислением этих значением, сравнением их с константой\nМножество операций над данными(O): INSERT (добавление новой строки), UPDATE (изменение значения признака(-ов) в строке таблицы), DELETE (удаление строки), SELECT (поиск строк, удовлетворяющих условию)\n\n",
    "question": "Проиллюстрируйте компоненты модели данных на примере категориальной модели.",
    "question_number": 23
  },
  {
    "answer": "Схема БД ассоциируется с совокупностью именованных категорий и их признаками, а также ограничениями на допустимые данные.\nБД ассоциируется с совокупностью данных, структура и значения которых соответствуют конкретной схеме\n\n",
    "question": "С чем ассоциируются понятия схема БД и база данных при табличном представлении данных?",
    "question_number": 24
  },
  {
    "answer": "СУБД (система управления базами данных) - программная система для создания и управления БД. СУБД должна предлагать свои языковые и диалоговые формы для множеств правил порождения схем (язык определения данных) и множества операций над данными (язык манипулирования данными):\nВопросы и задания к параграфу 2.2\n",
    "question": "Что представляет собой СУБД? Какие классы операций необходимо реализовать в любой СУБД?",
    "question_number": 25
  },
  {
    "answer": "Элементарная единица данных это “Знак” – данное, определяющее значение некой характеристики, какой-нибудь конкретный объект или же связь объектов.\nЭлементарная единица интерпретаций это “Тип” – класс подобных знаков. Имя типа задает интерпретацию принадлежащих ему знаков. \nВ технологии БД системы типов используются для структуризации ПрО.\n\n",
    "question": "Что представляют собой элементарные единицы данных и интерпретаций. Для чего они используются в технологии БД? (знак, тип)",
    "question_number": 26
  },
  {
    "answer": "В структурных компонентах схемы БД (Типы объектов ПрО, типы их связей, их характеристик) Типы в схеме не изолированы друг от друга, а образуют взаимосвязанную систему типов.\n\n",
    "question": "В каких частях системы БД представлены элементарные единицы данных и интерпретаций?",
    "question_number": 27
  },
  {
    "answer": "Одним из основных способов структуризации является абстракция. Абстракция используется для образования категорий данных. (Совокупность деталей конкретного явления или группы явлений, которая может быть рассмотрена и поименована, как самостоятельное целое.) \n1. Обобщение – это абстракция, при которой множество знаков или типов соотносится с одним общим типом в соответствии с отношением «есть некоторый». Имеет два частных случая: Классификация (обобщение знаков до типа (отношение «экземпляр-класс»), Генерализация (обобщение типов до типа (отношение «подкласс-суперкласс»))\n2. Агрегация - это абстракция, при которой объект конструируется из других, базовых объектов в соответствии с отношением «есть часть». Сложный объект собирается из более простых объектов, сложный тип собирается также из более простых\n\n",
    "question": "Какие мыслительные процедуры используются при структуризации данных? Уточните когда применяется каждая из них(абстракция, обобщение, агрегация).",
    "question_number": 28
  },
  {
    "answer": "Абстракции используются для интерпретации данных следующим образом, сначала определяются понятия, отвечающие задачам ПрО, затем для каждого понятия определяются необходимые признаки, и в конце если появляется объект, попадающий под какое-то из понятий, строиться его абстрактное представление, определяя значения признаков, агрегат которых определяет объект ПрО, интерпретация которого задается именем соответствующего понятия.\n\n",
    "question": "Поясните как абстракции используются для интерпретации данных (знаков).",
    "question_number": 29
  },
  {
    "answer": "Комплекс, множество, кортеж, домен, отношение, атрибут. //Этого, мб достаточно\n\nКомплекс – это собрание правильно идентифицированных объектов, удовлетворяющих условию i-принадлежности. Отношение i-принадлежности между элементом x и комплексом Y наблюдается тогда и только тогда, когда x находится в i-ой позиции комплекса Y. Это как множество, но элементы комплекса распределены по позициям, которые определены целыми положительными числами. Причем в каждой позиции может быть любое число различных элементов. Пример комплекса - блок почтовых ящиков. Номер ящика - номер позиции. Элементы комплекса - письма.\nМножество – это комплекс, все элементы которого находятся в одной позиции.\nКортеж (n-местный) – это комплекс, который имеет по одному элементу в каждой позиции от 1 до n.\nДомен - множество, элементы которого синтаксически однородны. # {1,2,3,4,5}\nАтрибут - именованный домен, представляющий семантически значимые объекты.\nОтношение - это множество, состоящее из заголовка и тела, где заголовок — это множество отображений названия атрибута в имя типа, а тело — это множество кортежей (множест???) отображений названия атрибута в значение атрибута\n",
    "question": "Перечислите традиционно используемые в моделях данных формы данных.(что такое комплекс, что такое множество, что такое кортеж, что такое домен, что такое атрибут, что такое отношение)",
    "question_number": 30
  },
  {
    "answer": "Множества не обязательно должны иметь фиксированное количество элементов, отсутствует порядок элементов во множестве и элементы-дубликаты не имеют смысла. Также множество характеризуется двумя важными свойствами: интенсионалом и экстенсионалом множеств.\n",
    "question": "Укажите свойства множеств.",
    "question_number": 31
  },
  {
    "answer": "Интенсионал множества - определяет свойства, общие для всех элементов всех реализаций множества. (объекты ПрО)\nЭкстенсионал множества - определяет актуальную реализацию множества, явно указывая на элементы. (знаки, идентифицирующие объекты ПрО)\nГоворить о нескольких реализациях множества уместно, потому что в БД динамичных ПрО, в разное время для одного и того же множества могут соответствовать разные реализации. (В качестве примера можно рассмотреть множество студентов, сидящих в конкретной аудитории. Его экстенсионал будет меняться чуть ли не на каждой паре занятий при неизменном интенсионале.)\n",
    "question": "Дайте определения интенсионала и экстенсионала множества. Почему в моделировании данных уместно говорить о нескольких реализациях множества?",
    "question_number": 32
  },
  {
    "answer": "В комплексе элементы распределены по позициям, и в любой может быть любое число (различных) элементов. В пределах одной позиции порядок элементов не определен. В разных позициях могут быть совпадающие элементы. А множество - это комплекс, все элементы которого находятся в одной позиции. Порядок элементов отсутствует, элементы-дубликаты в рамках множества не имеют смысла.\n",
    "question": "Чем отличается комплекс от множества?",
    "question_number": 33
  },
  {
    "answer": "И то и другое является специальными случаями комплекса.\nМножество – это комплекс, все элементы которого находятся в одной позиции.\nКортеж – это комплекс, в котором находится по одному элементу в каждой позиции от 1 до n.\n",
    "question": "Покажите что понятия множество и кортеж являются специализациями понятия комплекс",
    "question_number": 34
  },
  {
    "answer": "Атрибут - это именованный домен, представляющий семантически значимые объекты. (можно привести пример про домен целых положительных чисел, в который входит число 130, но никакого смысла не имеет; если число 130 принадлежит атрибуту “рост”, то мы сразу понимаем его смысл)\n",
    "question": "В чем принципиальное отличие элементов принадлежащих домену и атрибуту",
    "question_number": 35
  },
  {
    "answer": "Математическое отношение – это множество, выражающее соответствие между двумя или более множествами.\nОтношение в моделировании данных – это множество, состоящее из заголовка и тела, где заголовок — это множество отображений названия атрибута в имя типа, а тело — это множество множеств отображений названия атрибута в значение атрибута.\nОтношение в логике – отображение произведения n множеств на множество {0,1}\nОтличия: логическое отношение хранит истинность или ложность факта, а в моделировании данных принято хранить только истинные факты. От математического отношения отношение в моделировании данных отличается отсутствием порядка в элементах кортежа. В математике отношение - это просто множество без семантической интерпретации и неизменным экстенсионалом, в отличие от отношения в смысле моделирования данных.\n",
    "question": "Дайте определения и уточните различия определений понятия отношение в математике логике и моделировании данных.",
    "question_number": 36
  },
  {
    "answer": "В виде таблиц, графов или их симбиоза.\nТаблица: Объекты одного типа представляются отдельной таблицей, олицетворяющей отношение. Таким же образом могут быть представлены типы связей.\nГраф: граф схемы представляется графом типов, граф базы данных - графом знаков. Между вершинами и ребрами подразумевается отношение экземпляризации.\n",
    "question": "В каком виде задаются в БД интерпретации данных? ",
    "question_number": 37
  },
  {
    "answer": "Имена отношений, имена атрибутов\n\n",
    "question": "Каким формам данных приписываются интерпретации?",
    "question_number": 38
  },
  {
    "answer": "Объект, обладающий совокупностью индивидуальных значений характеристик, представляется в виде кортежа этих значений. Для всех объектов одного типа выделяется одинаковый набор характеристик, который составляет множество атрибутов отношения, представляющего этот тип объектов. Каждая связь конкретного типа задается в БД в виде кортежа, элементами которого являются знаки соответствующих объектов. Используя атрибуты, происходит интерпретация абстрактных понятий, таким как числа и строки.\n",
    "question": "Как они используются для интерпретации знаков (данных)?",
    "question_number": 39
  },
  {
    "answer": "Соответствие между формами данных и таблицами: СМ КАРТИНКУ ВЫШЕ\n1) Объекты одного типа представляются таблицей и показывают соответствующее отношение\n2) Заголовок таблицы - общее имя и характеризует соответствующее понятие о предметах\n3) Каждая строка таблицы - это кортеж, соответствующий конкретному объекту и задающий его значения однозначных характеристик, общих для всех объектов одного типа (атрибутов)\n4) Каждый столбец - один атрибут, имя которого помещается в шапку таблицы\n5) Типы связи также могут быть представлены таблицами, олицетворяющими соответствующие отношения. В табличной форме связи задаются дублированием значений атрибутов соответствующих объектов. \n\nСоответствие между формами данных и графами:\nГраф схемы - граф типов, граф БД - граф знаков\n1) Именованные вершины графа типов - атрибуты и типы объектов\n2) Совокупность не имеющих имен ребер графа типов, соединяющих атрибуты с их типом объектов - соответствуют отношению агрегации типов\n3) Именованные ребра этого графа - типы связей\n4) Вершины графа знаков - объекты и значения\n5) Совокупность ребер знаков, соединяющих значения с их объектом соответствует отношению агрегации знаков. Остальные ребра графа знаков, на концах которых расположены вершины-объекты, олицетворяют связи между этими объектами.\n",
    "question": "Установите соответствие между формами данных и их представлениями в виде таблиц и графов.",
    "question_number": 40
  },
  {
    "answer": "Интенсионал БД - структура БД. Это схема БД, включающая определения структур данных и ограничения целостности.\nЭкстенсионал - текущая реализация БД, состоит из реализации определенных в схеме БД форм данных - множеств и отношений.\nВопросы и задания к параграфу 2.3\n",
    "question": "Что ассоциируется с понятиями интенсионал БД и экстенсионал БД?",
    "question_number": 41
  },
  {
    "answer": "Ограничение целостности (ОЦ) можно представлять себе как логическое условие, которое для реализации данного множества, атрибута, отношения или нескольких отношений либо истинно, либо ложно. ОЦ вводятся в модели данных в целях повышения ее семантичности и расширения возможностей поддержания целостности данных.\nПервый аспект связан с адекватностью отражения реального мира в схеме, а второй – с возможностями СУБД обеспечивать соответствие порождаемых состояний БД требованиям, выражаемым ОЦ.\n\n",
    "question": "Что такое ограничение целостности (ОЦ) и для чего они предназначены?",
    "question_number": 42
  },
  {
    "answer": "Рассмотрим явное ограничение, указанное в схеме S и состояние БД. Это ограничение будет:\n1) правильно построено, если оно соответствует синтаксическим правилам задания ОЦ;\n2) удовлетворено состоянием БД, если оно истинно для него;\n3) удовлетворяемо, если существует некоторое состояние БД,удовлетворяющее ему;\n4) недостоверно, если никакое состояние БД не удовлетворяет ему;\n5) логическим следствием ограничений C1, ... Cn (т.е. избыточным ограничением), если ему удовлетворяют все состояния БД, которые удовлетворяют C1, ... Cn;\n6) эквивалентно другому ограничению, если они – логические следствия друг друга.\nСостояние БД удовлетворяет схеме, если это состояние удовлетворяет всем ее ограничениям. Схема удовлетворяема, если существует некоторое состояние БД, удовлетворяющее ей. Схема противоречива, если никакое состояние БД ей не удовлетворяет. Работоспособная схема должна быть удовлетворяема.\n",
    "question": "Дайте определения понятий связанных с процессом верификации ОЦ(ограничения целостности).",
    "question_number": 43
  },
  {
    "answer": "Существует две спецификации декларативные и процедурные ОЦ. Декларативные ОЦ имеют эффективные реализации алгоритмов проверок ОЦ и не требуют программирования. Процедурные же используют в случае недостаточной выразительности декларативных ОЦ, однако требуют программирования.\n",
    "question": "Охарактеризуйте способы проверки ОЦ(ограничения целостности) с точки зрения их предпочтительности.",
    "question_number": 44
  },
  {
    "answer": "Большинство ОЦ(ограничение целостности) можно отнести к одному из следующих типов:\n1. Ограничения на значения атрибутов. \nОбласть действия: Так областью действия ОЦ первого типа являются отдельные атрибуты. Редко, но встречаются случаи, когда они действуют на несколько атрибутов одного отношения.СУБД. Ее задачей является обеспечение того, чтобы для каждого кортежа отношения после подстановки значений указанных в таких ОЦ атрибутов эти ограничения выполнялись. \nНа русском: их задача – максимально сузить область допустимых значений\nатрибута и, таким образом, исключить возможность появления в БД недостоверных\nзначений.\n\n2. Ограничения на отображения:\nа) между атрибутами одного отношения: Область действия является одно отношение, как агрегат атрибутов.\nб) между отношениями: Область действия: подтипа могут охватывать несколько отношений (чаще всего – два), поскольку они отражают закономерности взаимосвязей между кортежами этих отношений.\n",
    "question": "Какие типы ОЦ(ограничения целостности) выделяются в моделировании данных? Каковы их области действия?",
    "question_number": 45
  },
  {
    "answer": "1. Принадлежность к определенному типу или домену (РОСТ INTEGER) \n2. Сравнение с константой или значение атрибута того же отношения (возможны более сложные выражения) РОСТ>50 РОСТ> ВЕС+100 \n3. Диапазон  Рост between 50 and 300\n4. Перечесление значений ПОЛ IN{‘м’,‘м’}\n5.Более сложные конструкции, включающие в виде атомов конструкций 2-4 (НАВЕРНО, можно сказать составные конструкции 2-4) (Пол =‘м’ AND РОСТ>180) OR (Пол =‘ж’ AND РОСТ>ВЕС+100)\n",
    "question": "Перечислите виды ОЦ(ограничения целостности) на значения атрибутов.",
    "question_number": 46
  },
  {
    "answer": "Особенность заключается в том, что требуется обязательное наличие единственного образа для каждого аргумента(отступление от правил- многозначные функции)\n\n",
    "question": "В чем особенность традиционного определения понятия «отображение» в математике?",
    "question_number": 47
  },
  {
    "answer": "Термин «семантически значимый» предполагает значимость с точки зрения семантики, изучающей семантические отношения, которые образуются между объектами и знаками, представляющими эти объекты в знаковой системе.\nДинамичный характер экземпляров отображений. В течение времени эти экземпляры могут возникать и исчезать, у них могут меняться образы (к примеру в функции y=x^2раз и навсегда фиксируются экземпляры)\n\nВариант 2: Главными отличием МО от СЗО является то, что экземпляры отображения раз и навсегда фиксируются, что нельзя сказать про СЗО.\n",
    "question": "Укажите основные отличия математического отображения от семантически значимого отображения.",
    "question_number": 48
  },
  {
    "answer": "1.Экземпляр отображения - каждый факт соответствия  одному объекту одного другого объекта \n2. Отображение этого объекта - все экземпляры одного и того же отображения, соответствующие одному объекту-прообразу\n3. Образ объекта х  - объект у, поставленный в соответствие объекту х одним из экземпляров отображения\n4. Прообраз объекта  y   - объект  x, которому соответствует у\n5. Область образов объекта - совокупность образов, порождаемая всем отображением объекта  х.  (Все отображение  объекта х порождает совокупность образов, которую будем называть областью -образов объекта х)\n",
    "question": "Дайте определения характеризующие роли элементов множеств участвующих в отображении.",
    "question_number": 49
  },
  {
    "answer": "Добавлено: В отличии от функций в математике в реальном мире в течении времени экземпляры отображений могут возникать и исчезать, но семантика отображения стабильна и в любой момент врмени отражает закон, который справедлив для всех возможных состояний, поэтому приходиться рассматривать и реальные и потенциальные ООО и ОЗО.\nРеальной областью определения отображения (РООО) называется совокупность всех объектов, имеющих образы при отображении φ\nРеальной областью значений отображения (РОЗО)  - совокупность всех φ-образов этих объектов.\nОбласть определения отображения  (ООО) – это совокупность объектов, которые в силу смысла закона φмогли иметь в прошлом или имеют в настоящем или смогут иметь в будущем хотя бы один φ-образ. \nОбласть значений отображения  (ОЗО) – это совокупность объектов, которые в силу смысла законаφмогли быть в прошлом или являются в настоящем или смогут стать в будущемφ-образами некоторых объектов.\n",
    "question": "Почему в моделировании данных приходится рассматривать реальные и потенциальные ООО и ОЗО? Дайте им определения. ",
    "question_number": 50
  },
  {
    "answer": "Кардинальное число (КЧ) - мощность области образов объекта при φ-отображении. Носит экстенсиональный характер, поскольку касается отдельных объектов, являющихся прообразами конкретного отображения.\nМинимальное кардинальное число (МинКЧ) отображения – это наименьшее из кардинальных чисел объектов х, являющихся экземплярами ООО(область определения отображения) φ :\n〖МинКЧ〗_φ=〖mi〖n_ 〗_(x экземпляр(ООО( φ))) 〖КЧ〗_φ  (х)〗_^ \nМаксимальное кардинальное число (МаксКЧ) отображения – это наибольшее из кардинальных чисел объектов х, являющихся экземплярами ООО φ :\n〖МаксКЧ〗_φ=〖max〖_(x экземпляр(ООО( φ)))〗〖КЧ〗_φ  (х)〗_^ \nМинКЧ и Макс КЧ количественно характеризуют все отображение φ. \n\n",
    "question": "Дайте определения КЧ МинКЧ и МаксКЧ. К каким элементам относятся эти характеристики? (Дайте определение кардинального числа)",
    "question_number": 51
  },
  {
    "answer": "\nОтображение φ называется :\n- неограниченным, если 〖МинКЧ〗_φ= 0,〖МаксКЧ〗_φ =∞ ;\n- полностью определенным, если 〖МинКЧ〗_φ≠0;\n- функциональным, если 〖МаксКЧ〗_φ= 1, в том числе:\n- частичным функциональным, если 〖МинКЧ〗_φ= 0, 〖МаксКЧ〗_φ= 1;\n- полным функциональным, если 〖МинКЧ〗_φ= 1, 〖МаксКЧ〗_φ= 1.\n\n",
    "question": "Перечислите и укажите характеристики типов отображений.(неограниченный,полностью определенный,функциональный)",
    "question_number": 52
  },
  {
    "answer": "Бинарное отношение множеств определяет два отображение между ними, означает, что определяется два отображения, первое отображение связывает элементы первого множества с соответствующими элементами из второго, а второе отображение – связывает элементы второго множества с соответствующими элементами из первого. \n\n",
    "question": "Поясните фразу бинарное отношение множеств определяет два отображения между ними.",
    "question_number": 53
  },
  {
    "answer": "\nПервая нотация:Пусть  бинарное отношение R определено на множествах  S〖_1〗и S〖_2〗. \nS〖_1〗(0, бесконечность) означает, что МинКЧ и МаксКЧ отображения равны 0 и бесконечность соответственно – любой элемент S〖_2〗может быть связан минимум с 0 и максимум с бесконечность элементовS〖_1〗. \nS〖_2〗(0, 1) означает, что МинКЧ и МаксКЧ отображения равны 0 и 1 соответственно – любой элементS〖_1〗может быть связан минимум с 0 и максимум с 1 элементом S〖_2〗.\nВторая нотация: характеризует только МаксКЧ\n\n1:1 (“один-к-одному”) – оба отображения функциональны\n1:M (“один-ко-многим”) – одно отображение функционально, второе – нет\nM:N (“многие-ко-многим”) – оба отображения не функциональны\n\nПервая нотация по сравнению со второй более информативная, поскольку несет информацию как о бинарном отношении, так и о МинКЧ и МаксКЧ для обоих отображений. Вторая же нотация характеризует лишь МаксКЧ отображений. \n",
    "question": "Какими символическими нотациями можно описать бинарные отношения? Сравните их информативность на примере различных типов бинарных отношений. ",
    "question_number": 54
  },
  {
    "answer": "Простое отображение – отображение, у каждого экземпляра которого есть 1 объект-прообраза и 1 объект-образа.\nСложное отображение – отображение, каждый экземпляр которого имеет более 1 объекта-прообраза и/или объекта-образа.\nПример: ПрО ближайших родственников. Единственный тип объектов – ЧЕЛОВЕК и три отношения. Два из этих отношений бинарны (БРАК и РОДИТЕЛЬ-РЕБЕНОК), а одно тернарно (ОТЕЦ-МАТЬ-РЕБЕНОК).\nРодители: (1,1)\nРебенок: (0,беск)\nМать: (0,1)\nОтец с Ребенком: (0,беск)\nОтец: (0,1)\nМать с Ребенком: (0, беск)\nПример: «поставка некоторым поставщиком детали для конкретного проекта». Каждый факт такой поставки представляет собой тернарную связь между конкретными поставщиком, деталью и проектом. Перебирая варианты поляризации участвующих в этом типе связей множеств по двум полюсам «прообраз» – «образ», имеем три пары взаимно обратных отображений:\nПОСТАВЩИК -> ДЕТАЛЬ Х  ПРОЕКТ и ДЕТАЛЬ Х ПРОЕКТ -> ПОСТАВЩИК,\nДЕТАЛЬ -> ПОСТАВЩИК Х ПРОЕКТ и ПОСТАВЩИК Х ПРОЕКТ -> ДЕТАЛЬ,\nПРОЕКТ -> ПОСТАВЩИК Х ДЕТАЛЬ и ПОСТАВЩИК Х ДЕТАЛЬ -> ПРОЕКТ, здесь символ «Х» – знак операции Декартова произведения.\n",
    "question": "Укажите отличие сложного отображения от простого отображения. Приведите примеры сложных отображений укажите их характеристики и тип.",
    "question_number": 55
  },
  {
    "answer": "Возможный ключ (потенциальный ключ, ключ-кандидат) – это \n1) Атрибут (группа атрибутов) отношения, который функционально определяет все другие атрибуты этого отношения.\n2) Атрибут (группа атрибутов) отношения, который функционально определяет отношение.\n3) Атрибут (группа атрибутов) отношения, который не имеет значений-дубликатов в кортежах отношения.\n",
    "question": "Дайте три определения возможного ключа.",
    "question_number": 56
  },
  {
    "answer": "В каждом кортеже отношения в атрибуте должно лежать какое-то значение ??? \nОбязательный атрибут - в каждом кортеже отношений в этом атрибуте должно лежать какое-то значение (NOT NULL)\n",
    "question": "Что означает определенность значения атрибута?",
    "question_number": 57
  },
  {
    "answer": "Т.е. между первичным ключом и отношением существует взаимно однозначное соответствие (каждому значению первичного ключа соответствует один и только один кортеж и наоборот) \nДоп: Если между отношением и некоторым его атрибутом отображение полностью определено (а точнее, оно – полное функциональное), этот атрибут не может иметь неопределенных значений в кортежах отношения.\nВопросы и задания к параграфу 2.4\n",
    "question": "Какие особенности каких отображений скрываются в определении возможного ключа и обязательности значений атрибута? ??? Если между первичным ключом отношения и некоторым другим атрибутам этого же отношения отображения полностью определенно (полное функциональное), то этот атрибут не может иметь неопределенных значения в кортежах отношений.",
    "question_number": 58
  },
  {
    "answer": "Состояние БД (текущее) - совокупность значений данных, а также значение индикатора текущей, указывающее на строку, к которой осуществлялось последнее обращение.\nВыполнение операции «дать следующую строку» не приведет к изменению реализации БД, но состояние БД изменится, так как изменится значение индикатора текущей.\n\nДополнение: сообщения об ошибках также относятся к управляющим элементам, входящим в расширенное состояние БД.\n",
    "question": "Дайте определение расширенного состояния БД. ???",
    "question_number": 59
  },
  {
    "answer": "Операции над данными - это перевод БД из одного состояния в другое или в неопределенное состояние, причем изменение состояния происходит или при изменении реализации данных, или при изменении управляющих элементов. \n(Каждое состояние БД должно соответствовать ее схеме, т.е. выполнение операций не должно приводить к нарушению свойств данных, отраженных в схеме.\nВажный момент определения операций в моделировании данных - обеспечение достаточной простоты их усвоения пользователем.)\n\n",
    "question": "Что такое операция над данными?",
    "question_number": 60
  },
  {
    "answer": "Действие – определяет характер операции. Селекция – критерий отбора данных, над которыми должно быть произведено действие.\n\n",
    "question": "Какие два компонента можно выделить в любой операции над данными?",
    "question_number": 61
  },
  {
    "answer": "Пять основных видов действий над данными:\n1) установка текущих – типичные ключевые слова – SET CURRENCY, FIND - не является необходимым и встречается не во всех языках СУБД;\n2) включение (добавление новых элементов данных в БД) – INSERT, ADD;\n3) обновление (модификация существующих элементов данных в БД) – UPDATE, MODIFY;\n4) удаление (исключение элементов данных из БД) – DELETE, REMOVE;\n5) выборка (получение данных из БД) – SELECT, GET.\n2-5 – ключевые для технологии БД. Необходимы в языке манипулирования данными любой СУБД. \n\n",
    "question": "Какие действия над данными предусмотрены в технологии БД?",
    "question_number": 62
  },
  {
    "answer": "Селекция может осуществляться посредством: логической позиции в БД – селекция по текущей; значений данных – селекция по данным; связей между данными – селекция по \tсвязям.\n\n",
    "question": "Какими способами можно селектировать данные для выполнения тех или иных действий с ними?",
    "question_number": 63
  },
  {
    "answer": "1) Навигационные операции – результат всегда представлен единственным элементом (в зависимости от модели это могут быть значение атрибута, кортеж, сущность, связь и т.д.), полученным при прохождении по логическому пути (т.е. при навигации) в структуре БД. \n2) Спецификационные операции – результат новая подсхема, определяемая на схеме БД, которой в общем случае соответствует множество элементов, существующих в БД.\n\n1) Навигационный язык – язык, все операции которого являются навигационными. Особенности:\n\tони всегда представляют собой программу;\n\tдля их формулировки требуется язык программирования с условными конструкциями и конструкциями циклов;\n\tв них обязательно используется селекция по текущей;\n\tдля них необходимо действие установки текущих.\n2) Спецификационный язык – язык, все операции которого являются спецификационными. В нем отсутствуют все характерные для навигационных языков черты.\n",
    "question": "Какие два класса операций и языков манипулирования данными выделяются в технологии БД? Каковы их особенности?",
    "question_number": 64
  },
  {
    "answer": "Процедура БД – последовательность операций, выполняемых при определенных условиях. Хранится и выполняется на сервере. Состоит из 3 разделов: условие, действие, результат.\n",
    "question": "Что такое процедура БД?",
    "question_number": 65
  },
  {
    "answer": "1) Функции агрегирования – вычисление значений, которые непосредственно не хранятся в БД (вычисление сумм, подсчет числа экземпляров, определение минимума и максимума).\n2) Виртуальные атрибуты – вычисление значения атрибута (вычисление возраста человека по заданной текущей дате и дате рождения, что выполняется по запросу о возрасте).\n3) Триггеры целостности – служат для проверки и/или поддержки ОЦ (ОЦ – обеспечение целостности).\n4) Триггеры безопасности – служат для обеспечения контроля над доступом к данным и проверки полномочий и аутентичности пользователей (процедура БД может получать в качестве исходных данных идентификационные параметры пользователя, время, дату, вид действия и вырабатывать сообщения для пользователя, журнала или лица, ответственного за соблюдение правил доступа).\n5) Операторы доступа – служат для расширения языка данных операциями, первоначально в нем не предусмотренными (операция сортировки может быть определена как процедура БД, предшествующая выдаче результата спецификационной операции).\n6) Триггеры БД, запускаемые операциями DML (INSERT, UPDATE, DELETE – включением, обновлением, удалением) (прикладные триггеры) – инициируются операциями модификации одних данных и выполняют косвенные модификации других данных (если тип связей между отношениями является полным (хотя бы одно из определяемых им отображений полностью определено), то удаление кортежа может привести к запуску процедуры, удаляющей все кортежи, связанные с удаляемым).\n7) Административные триггеры – применяются для сбора статистики или для реализации каких-либо других функций администрирования БД. Не изменяют данные, но могут модифицировать состояние БД. Процедура администратора БД - ещё одно название.\nВопросы и задания к параграфу 3.2\n",
    "question": "Какие виды процедур БД вам известны? (триггер, виртуальный, оператор доступа)",
    "question_number": 66
  },
  {
    "answer": "Сущность в ER-модели - это абстрактное представление этого объекта ПрО. Таким образом, один объект может быть представлен множеством абстракций.\nСвязь в ER-модели - это единичный экземпляр отношения между сущностями\n\n",
    "question": "В чем отличие сущностей и связей ER-модели от предметов ПрО и отношений между ними?",
    "question_number": 67
  },
  {
    "answer": "Отношением объекта к сущностям является бинарное отношение 1:M.\n",
    "question": "Какого типа отношение существует между предметами и их сущностями? ",
    "question_number": 68
  },
  {
    "answer": "Унарные: только один набор сущностей участвует в наборе отношений (напр. Брак(Человек, Человек))\nБинарные: в наборе отношений участвуют два набора сущностей (напр. Экзамен(Препод, Студент))\nТернарные: в наборе отношений участвуют три набора сущностей (напр. Размещение(Больница, Палата, Пациент))\nN-арные: и т.д.\n\nP.s. Множество связей (англ. relationship set) можно рассматривать как математическое отношение, определенное в общем случае на n множествах сущностей, а связь – как кортеж этого отношения с n элементами-сущностями.\n",
    "question": "Какими по структуре могут быть множества связей?",
    "question_number": 69
  },
  {
    "answer": "Во второй главе атрибут рассматривается как именованный домен, представляющий семантически значимые объекты (т.е. как множество) Доп: Атрибуты являются интерпретацией объектов реального мира и их характеристик. Чен определяет атрибут как отображение, ставящее в соответствие сущностям или связям некоторого множества одиночные значения или кортежи значений. (т.е. как функцию)\n",
    "question": "Как соотносится определение атрибута данное Ченом с определением этого же термина во второй главе учебного пособия?",
    "question_number": 70
  },
  {
    "answer": "В ER-модели для представления связей используются специальные уникальные указатели, а в реляционной модели - значения атрибутов.\n\n",
    "question": "Чем отличается представление в БД связей ER-модели и реляционной модели?",
    "question_number": 71
  },
  {
    "answer": "Er-диаграмма - граф, который состоит из:\n* Вершин (множество сущностей, изображается прямоугольниками, множество связей - ромбами, множество значений - овалами)\n* Неориентированных ребер (соответствуют ролям сущностей в связях)\n* Ориентированных дуг (атрибутные отношения [выходят из вершин сущностей или связей и входят в множество значений] )\n",
    "question": "Из каких элементов состоит ER-диаграмма Чена?",
    "question_number": 72
  },
  {
    "answer": "* Вершины (множество сущностей, изображается прямоугольниками, множество связей - ромбами, множество значений - овалами)\n* Неориентированные ребра (соответствуют ролям сущностей в связях)\n* Ориентированные дуги (атрибутные отношения [выходят из вершин сущностей или связей и входят в множество значений] )\nИмена множеств указываются внутри фигур. Ребра помечены именами ролей. Дуги - именами атрибутов. \n",
    "question": "По каким правилам она строится?",
    "question_number": 73
  },
  {
    "answer": "Степенью множества связей является число n множества сущностей, на котором оно\nопределено или длина кортежа этого отношения (связи). \n\n",
    "question": "Как правильно определять степень множества связей?",
    "question_number": 74
  },
  {
    "answer": "* Атрибут - атрибут множества сущностей или множества связей. Например, сущность: человек, атрибут:состоит в браке. \n* Связь - связь между двумя сущностями. Например, связь брак между сущностями человек и человек.\n* Сущность - отдельная сущность. Обычно используется, если надо представить связь с другими явлениями. Например, сущность - брак.\n\n",
    "question": "В каких различных формах может быть представлено в ER-модели некоторое явление ПрО?",
    "question_number": 75
  },
  {
    "answer": "Стоит выбрать:\n* Атрибут, если вам достаточно знать о каком-то значении(характеристике) сущности. (Например, состоит ли человек в браке или нет)\n* Связь, если важно с кем именно связана сущность. Например, с кем именно состоит человек в браке.\n* Сущность,  если понадобится представить связь с другими явлениями. Например, связь браков с другими явлениями.\n\n",
    "question": "Как осуществлять выбор подходящей формы?",
    "question_number": 76
  },
  {
    "answer": "Чен предложил две формы: графовую и табличную. \nВершинами графа являются сущности, связи и значения. Принято объединять элементы одного множества, помечать множества их именем и располагать однотипные множества в соответствующие столбцы. Неориентированные ребра между сущностями и связями соответствуют ролям сущностей в сязи, ориентированные дуги представляют экземпляры атрибутных отношений. \nКаждому множеству сущностей и множеству связей соответствует своя таблица. В таблице множества сущностей шапка двухстрочная, а шапка для таблицы множеств связей - трехуровневая.\n\nДополнение к таблицам: Верхняя строка шапки задает имена атрибутов, значения которых будут располагаться в столбцах таблицы, начиная со второго. Вторая строка шапки именует множество сущностей (первый столбец) и определяет множества значений для соответствующих атрибутов. В теле таблицы одна строка соответствует одной сущности, представленной своим условным знаком (e1, e5) и значениями атрибутов.\nШапка таблицы для множеств связей – трехуровневая. На верхнем уровне представлены роли сущностей в связях (количество начальных столбцов для сущностей и их ролей соответствует степени множества связей). На втором уровне слева указано имя множества связей, далее следуют имена атрибутов (количество правых столбцов определяется количеством атрибутов у множества связей). Третий уровень шапки предназначен для задания имен множеств сущностей, участвующих во множестве связей в соответствующих ролях, и множеств значений, являющихся ОЗО атрибутных отображений. Строки тела таблицы соответствуют самим связям. В них указаны условные знаки сущностей и значения атрибутов.\n",
    "question": "Какие формы предложил Чен для представления экстенсионала БД в своей модели? Опишите их.",
    "question_number": 77
  },
  {
    "answer": "Приставка “мета” по сути указывает на то, что раньше являлось типом - становится знаком. Таким образом типы из ER-схемы становятся данными в метасхеме. \n\n",
    "question": "Что является данными когда рассматривается метасхема?",
    "question_number": 78
  },
  {
    "answer": "* множества сущностей представлены в виде множества сущностей\n* множества связей представлены в виде множества сущностей\n* множества значений представлены в виде множества сущностей\n* роли представлены в виде множества сущностей\n* атрибуты множеств сущностей и множеств связей представлены в виде множеств связей\nДоп: Пометки на ребрах, естественно, задают МинКЧ и МаксКЧ тех отображений между множествами сущностей, в которых множество сущностей, расположенное на конце этого ребра, играет роль ОЗО. Также в виде множества связей АГРЕГАЦИЯ представлены взаимосвязи типа «часть-целое» между множествами значений. Два неподписанных множества связей между МНОЖЕСТВОМ СУЩНОСТЕЙ и РОЛЬЮ, а также между МНОЖЕСТВОМ СВЯЗЕЙ и РОЛЬЮ имеют смысл «играть роль» и «иметь роль» соответственно.\n",
    "question": "Представьте метасхему ER-модели Чена.",
    "question_number": 79
  },
  {
    "answer": "Задание ограничений целостности на значения атрибутов достаточно традиционно и осуществляется текстом. Для атрибутивных отображений используется функциональная форма. Используется язык исчисления предикатов первого порядка. \n",
    "question": "В чем особенности синтаксиса ограничений целостности на значения атрибутов в ER-модели?",
    "question_number": 80
  },
  {
    "answer": "(опр. 1) Ключ сущности - атрибут или группа атрибутов такая, что гарантируется, что у каждого элемента множества значений будет один элемент множества сущностей.\n(опр.2)Ключ сущности - атрибут или группа атрибутов, такая, что гарантируется функциональность отображения из множества значений в множество сущностей.\n",
    "question": "Поясните особенности понятия «ключ» в ER-модели.",
    "question_number": 81
  },
  {
    "answer": "Наличие у сущностей уникальных указателей, с помощью которых происходит идентификация сущностей в БД, уже выполняют работу первичного ключа, по идентификации объектов в БД.\n",
    "question": "Почему в ER-модели неуместно использование первичных ключей",
    "question_number": 82
  },
  {
    "answer": "* Только по сущностям, в ней участвующим.(Например, врач-пациент. Для идентификации требуется указать сущности обоих множеств\n* По сущностям, в ней участвующим, и значениям одного или нескольких атрибутов множества связей.(Например, связь размещение. Для идентификации достаточно указать сущность типа палата и значение атрибута номер койки)\n* Только по значениям одного или нескольких атрибутов множества связей. (Например, связь брак можно идентифицировать по атрибуту серия и номер свидетельства)\n",
    "question": "Объясните и приведите примеры всех способов идентификации связей.",
    "question_number": 83
  },
  {
    "answer": "E-зависимость - ограничение по существованию сущностей.\nID-зависимость - зависимость идентификации. В этом случае сущности зависимого множества сущностей не просто обязаны иметь связи с сущностями другого множества сущностей, но и не могут быть идентифицированы без них.\n",
    "question": "Что представляют собой E-зависимость и ID-зависимость?",
    "question_number": 84
  },
  {
    "answer": "Множество слабых сущностей - зависимое множество.(Элементы зависимого множества не могут существовать без элементов множества, от которого первое (зависимое) множество зависит)\nМножество регулярных сущностей образуют сущности, не принадлежащие множеству слабых сущностей.\n",
    "question": "Чем отличаются множество слабых сущностей и множество регулярных сущностей?",
    "question_number": 85
  },
  {
    "answer": "Норм ответ: В случае множества связей степени больше двух одной пометки на ребре уже недостаточно. Для тернарного случая по две пометки на разных концах ребер достаточно для характеристики МаксКЧ всех отображений между множествами сущностей, определяемых множеством связей. Для множеств связей степени больше 3-х можно рекомендовать делать также по две пометки на ребре: одна (возле множества связей) для отображения, определяемого ролью, другая (ближе к множеству сущностей) – для отображения, определяющего роль.\n\nОтображение АНАЛИЗ  ПАЦИЕНТ -> ВРАЧ (отображение, определяющее роль) функционально, поэтому на ребре роли рядом с множеством сущностей ВРАЧ ставим пометку «1». Обратное ему отображение ВРАЧ -> АНАЛИЗ  ПАЦИЕНТ (определяемое ролью) Eнефункционально, поэтому на том же ребре рядом с множеством связей ставим пометку «M».\n",
    "question": "Поясните, как расставлять пометки на ребрах ролей ER-диаграммы в случае множества связей степени больше 2-х. Приведите примеры",
    "question_number": 86
  },
  {
    "answer": "Так как в ER-модели значения самостоятельной ценности не имеют, для навигационного манипулирования должны быть понятия указателей текущих сущностей и связей, пробегающих по соответствующим множествам. Необходима возможность неоднократного одновременного их определения для обеспечения параллельных независимых сканирований одних и тех же множеств\n\nПримеры команд:\n\tСоздание и удаление элементов (создание, изменение, удаление сущностей и связей)\n\tУстановка указателей текущих (7 - 14)\n\tВыборка значений атрибутов для текущей сущности или связи\n\nДоп:\n1) Создание сущностей (с возможностью задания экземпляров\nатрибутных отображений)\n2) Изменение сущностей (изменение экземпляров атрибутных\nотображений)\n3) Удаление сущностей\n4) Создание связей (с указанием сущностей для всех ролей и\nэкземпляров атрибутных отображений)\n5) Изменение связей (изменение экземпляров атрибутных\nотображений)\n6) Удаление связей\n7) Селекция сущности по указателю текущей\n8) Селекция связи по указателю текущей\n9) Селекция сущности по указателю текущей и по данным\n10) Селекция связи по указателю текущей и по данным\n11) Селекция сущности по указателю текущей и по связи\n12) Селекция связи по указателю текущей и по связи\n13) Селекция сущности по указателю текущей, по данным и по\nсвязи\n14) Селекция связи по указателю текущей, по данным и по связи\n15) Выборка значений атрибутов для текущей сущности или связи\n",
    "question": "Укажите особенности навигационного манипулирования данными в ER-модели. Приведите набор необходимых для этого команд.",
    "question_number": 87
  },
  {
    "answer": "Подграф запроса может быть в виде одной вершины, в виде линейного маршрута от исходного множества к целевому или в виде дерева, где листья - исходные множества, а корень - целевое множество (в вершинах, где сливаются пути, происходят операции объединения, пересечения или разности полученных подмножеств).\n",
    "question": "Какие формы может принимать подграф запроса на языке CABLE?",
    "question_number": 88
  },
  {
    "answer": "Если в запросе специфицировано дерево. В вершинах, где сливаются пути, происходят теоретико-множественные операции (объединения, пересечения или разности полученных подмножеств).\n\n\nПримеры запросов:\n* OUTPUT ВРАЧ.Фамилия SELECT ВРАЧ.Специальность = ‘окулист’ - получить фамилии врачей-окулистов (подграф - один узел)\n* OUTPUT ПАЦИЕНТ.Фамилия SELECT Больница.Название = ‘Святая Елена’ / ПАЛАТА - получить фамилии пациентов больницы Святой Елены (подграф - линейный маршрут)\n* OUTPUT ВРАЧ.Фамилия (SELECT БОЛЬНИЦА.Название = ‘Святая Елена’ / ПАЛАТА / ПАЦИЕНТ) ∩ (SELECT ЛАБОРАТОРИЯ.Название = ‘Друг желудка’ / АНАЛИЗ / ПАЦИЕНТ) - получить фамилии врачей, пациенты которых лежат в Святой Елене и чьи анализы делали в Друге желудка (подграф - дерево)\n",
    "question": "В каких случаях можно явно задавать в запросе теоретико-множественные операции? Приведите примеры запросов на этом языке.",
    "question_number": 89
  },
  {
    "answer": "1) Модель должна обладать достаточной общностью и ясностью, чтобы в ней можно было представить любые явления и законы предметной области.\n2) Разрыв между моделью и моделью, реализуемой в СУБД, не должен быть большим. Желательно, чтобы можно было задать максимально формальные правила преобразования структур и ОЦ из одной модели в другую.\n\n",
    "question": "Поясните критерии качества семантических моделей.",
    "question_number": 90
  },
  {
    "answer": "ER-модель Чена + категоризации, специализации = EER-модель\nEER-модель - множества связей степени больше двух, атрибуты множеств связи, многозначные атрибуты, атрибутные отношения в декартово произведение множеств значений = ER-модель Баркера\nER-модель Баркера - бинарные множества связей типа M:N, представление связей с помощью внутрисистемных указателей = ER-модель IDEF1X.\n\nДополнение:\n",
    "question": "Нарисуйте общую схему модификаций ER-модели Чена. Какие концепции добавлялись или удалялись на каждом из этапов этих модификаций?",
    "question_number": 91
  },
  {
    "answer": "Специализации и категоризации используются, когда необходимо задать отношения типа “подкласс-суперкласс” между множествами сущностей, которые используются для исключения дублирования определения общих атрибутов и типов связей. Специализация и категоризация позволяют восстановить единство объекта ПрО, который в противном случае рассматривается как несвязанные абстрактные сущности.\n",
    "question": "В каких случаях используются специализации и категоризации?",
    "question_number": 92
  },
  {
    "answer": "Для специализаций:\n1) Ограничение непересечения - непересекающаяся (каждый объект может быть представлен сущностью только одного из подклассов специализации) или пересекающаяся (можно неск.).\n2) Ограничение участия: полное (каждый объект сущности суперкласса должен быть представлен сущностью хотя бы одного подкласса) или частичное (не обязательно должен).\nДля категоризаций:\nОграничение участия: полное (каждый объект всех суперклассов представлен сущностью категории) или частное (не обязательно).\n\n",
    "question": "Какие ограничения целостности касаются специализаций и категоризаций?",
    "question_number": 93
  },
  {
    "answer": "Подклассы и суперклассы обозначаются прямоугольником.\nПодклассы специализаций соединяются линиями с кружком, который соединяется с суперклассом. Символ включения множества в множество ⊂ ставится на линию между подклассом и кружком и указывает на подкласс. В кружке ставится буква d, если специализация непересекающаяся, или o, если пересекающаяся. Линия между кружком и суперклассом двойная, если специализация полного участия.\nВ кружке категоризации ставится символ объединения (U), на линиях между кружком и суперклассом ставится символ включения множества в другое множество. Линия между кружком и суперклассом двойная, если категоризация полного участия.\n",
    "question": "Опишите графическую нотацию применяемую для представления специализаций и категоризаций на EER-диаграммах.",
    "question_number": 94
  },
  {
    "answer": "1) Отображение из подкласса в суперкласс специализации полное функциональное (отношение специализации можно описать фразой “есть некоторый”), а категоризации - частичное функциональное (отношение категоризации можно описать фразой “есть некоторый или А, или Б, или …”).\n2) Все классы специализации - родственные классы, а определения подклассов ссылаются на суперкласс. Суперклассы категоризации, как правило, разные, всегда непересекающиеся классы.\n3) Конкретное множество сущностей может использоваться в разных специализациях и быть как суперклассом, так и подклассом. Подклассом категории же оно может быть лишь однажды.\n",
    "question": "Докажите что понятия специализация и категоризация не тождественны.",
    "question_number": 95
  },
  {
    "answer": "В метасхеме появились множества сущностей Специализация и Категоризация, соответствующие множества связей Суперкласс и Подкласс между ними и множеством сущностей Множество сущностей.\n",
    "question": "Какие изменения произошли в метасхеме EER-модели по сравнению с метасхемой ER-модели? Нарисуйте ее.",
    "question_number": 96
  },
  {
    "answer": "Множества связей степени больше двух, атрибуты множеств связей, многозначные атрибуты, атрибутные отображения в декартово произведение множеств значений.\n\n",
    "question": "Каких структурных понятий мы лишаемся при переходе от EER-модели к ER-модели Баркера?",
    "question_number": 97
  },
  {
    "answer": "1) Множество связей степени n -> вспомогательное множество сущностей и n бинарных множеств связей.\n2) Атрибуты множеств связи -> замена множества связей множеством сущностей и бинарными множествами связей. Однозначные атрибуты множества связей станут атрибутами нового множества сущностей. Другое решение: добавление атрибутов множества связей в то множество сущностей, участвующее в этом множестве связей, роль которого определяет функциональное отображение. \n3) Многозначные атрибуты -> создание самостоятельного множества сущностей с атрибутом для значений и бинарного множества связей типа “многие-к-одному” между новым множеством сущностей и множеством сущностей - владельцем многозначного атрибута. Множество связей - владельца многозначного атрибута превращается в множество сущностей.\n4) Атрибутные отображения в декартово произведение множеств значений -> представление их или элементарными атрибутами, или атрибутами-агрегатами, или и тем, и другим.\n",
    "question": "Какими структурными понятиями ER-модели Баркера мы вынуждены их заменять?",
    "question_number": 98
  },
  {
    "answer": "Бинарные множества связей представляются ребрами с двумя концами.\nПунктирная линия обозначает регулярную сущность (МинКЧ = 0), сплошная - слабую (МинКЧ = 1). Одиночный конец ставится у множества сущностей, являющегося областью значений функционального отображения (МаксКЧ = 1), вилочкообразный - нефункционального (МаксКЧ = бесконечность). \nПоперечный штрих на конце ребра говорит об ID-зависимости, ромбик - неперемещаемом конце связи (например, при переходе врача из одной больницы в другую, можно изменить указатель на больницу, не удаляя связь; но нельзя менять указатель на врача в связях типа ШТАТНЫЙ ВРАЧ).\nМножества сущностей представлены прямоугольниками с закругленными углами, внутри указывается имя множества сущностей и имена атрибутов. # рядом с именем атрибута означает, что он участвует в уникальной идентификации сущностей, * ставится рядом с not null, o с null.\n",
    "question": "Опишите графическую нотацию Баркера.",
    "question_number": 99
  },
  {
    "answer": "* каждое множество сущностей порождает отношение;\n* атрибуты множества сущностей переносятся в отношение;\n* если у множества сущностей не было ключей среди естественных атрибутов, система генерирует для его отношения суррогатный ключ (именем этого атрибута становится комбинация из имени отношения и суффикса «_ID»);\n* множества связей типа один-к-одному и один-ко-многим реализуются дублированием ключей и объявлением внешних ключей;\n* множества связей типа многие-ко-многим порождают дополнительное отношение и пару внешних ключей в нем.\n",
    "question": "Укажите правила трансформации схемы БД из ER-модели Баркера в реляционную модель.",
    "question_number": 100
  },
  {
    "answer": "ER-модель в нотации IDEF1X низведена до уровня реляционной модели.\nВ ней к уже упоминавшимся в нотации Баркера изъятиям добавились следующие требования: бинарные множества связей типа M:N необходимо сводить вручную к дополнительному множеству сущностей и паре множеств связей типа 1:M; необходимо дублировать первичные ключи множеств сущностей (и формировать, таким образом, внешние ключи) для представления множеств связей типа 1:M. \n",
    "question": "Охарактеризуйте ER-модель в нотации IDEF1X.",
    "question_number": 101
  },
  {
    "answer": "Бинарные множества связей типа многие-ко-многим сводятся вручную к дополнительному множеству сущностей и паре множеств связей типа один-ко-многим.\nСвязи типа один-ко-многим осуществляются путем дублирования первичных ключей множеств сущностей.\n",
    "question": "Каких структурных понятий мы лишаемся при переходе от ER-модели Баркера к нотации IDEF1X? Чем мы вынуждены их заменять?",
    "question_number": 102
  },
  {
    "answer": "Почти одинаковые, отличаются переименованием понятий: «тип сущностей» – «отношение», «тип связей» – «ограничение ссылочной целостности», «атрибут типа сущностей» – «атрибут отношения».\n",
    "question": "Сравните ER-модель в нотации IDEF1X и реляционную модель.",
    "question_number": 103
  }
]
